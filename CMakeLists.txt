cmake_minimum_required(VERSION 3.24)
include(ExternalProject)

set(ProjectName psOff_third_party)
project(${ProjectName} VERSION 0.0.1)

set(INSTALL_DIR ${CMAKE_BINARY_DIR}/install)
set(BUILDS_DIR ${CMAKE_BINARY_DIR}/builds)

unset(CMAKE_IMPORT_LIBRARY_SUFFIX)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

set(CMAKE_CXX_FLAGS_RELEASE "/MD /Zi /GS- /GF /Gy /GR /Oi -Os -fno-strict-aliasing")
set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} /OPT:REF,ICF")
set(CMAKE_INSTALL_MESSAGE LAZY)

set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
set(CMAKE_WINDOWS_SYMBOL_VISIBILITY_IN_STATIC_LIBRARIES OFF)

find_package(Vulkan REQUIRED)

ExternalProject_Add(zlib_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/zlib
  BINARY_DIR ${BUILDS_DIR}/zlib
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
)

install(FILES "projects/fff/fff.h" DESTINATION ${INSTALL_DIR}/include/fff/)

# P7
ExternalProject_Add(p7_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/p7
  BINARY_DIR ${BUILDS_DIR}/p7
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}

  -DP7TRACE_NO_VA_ARG_OPTIMIZATION=1
)

install(DIRECTORY "projects/p7/Headers/" DESTINATION ${INSTALL_DIR}/include/p7
  FILES_MATCHING PATTERN "*.h"
)

# SDL2
# APPLY SDL PATCH
ExternalProject_Add(sdl_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/SDL
  BINARY_DIR ${BUILDS_DIR}/sdl
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
)

ExternalProject_Add(libpng_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/libpng
  BINARY_DIR ${BUILDS_DIR}/libpng
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}

  -DPNG_SHARED:BOOL=ON
  -DPNG_STATIC:BOOL=OFF
  -DPNG_EXECUTABLES:BOOL=ON
  -DPNG_TOOLS:BOOL=OFF
  -DPNG_TESTS:BOOL=OFF
  -DSKIP_INSTALL_ALL:BOOL=OFF
  -DZLIB_LIBRARY:STRING=${INSTALL_DIR}/lib/zlib.lib
  -DZLIB_INCLUDE_DIR:STRING=${INSTALL_DIR}/include
)
ExternalProject_Add_StepDependencies(libpng_project install zlib_project)

ExternalProject_Add(optick_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/optick
  BINARY_DIR ${BUILDS_DIR}/optick
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
)

ExternalProject_Add(gtest_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/googletest
  BINARY_DIR ${BUILDS_DIR}/gtest
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}

  -Dgtest_force_shared_crt:BOOL=ON
)

install(DIRECTORY "projects/ffmpeg/bin/" DESTINATION "${INSTALL_DIR}/bin")
install(DIRECTORY "projects/ffmpeg/include/" DESTINATION "${INSTALL_DIR}/include")
install(DIRECTORY "projects/ffmpeg/lib/" DESTINATION "${INSTALL_DIR}/lib")

install(DIRECTORY "projects/openssl/bin/" DESTINATION "${INSTALL_DIR}/bin")
install(DIRECTORY "projects/openssl/include/" DESTINATION "${INSTALL_DIR}/include")
install(DIRECTORY "projects/openssl/lib/" DESTINATION "${INSTALL_DIR}/lib")

install(DIRECTORY "projects/nlohmann/" DESTINATION ${INSTALL_DIR}/include/nlohmann
  FILES_MATCHING PATTERN "*.hpp"
)

install(DIRECTORY "projects/magic_enum/include/" DESTINATION ${INSTALL_DIR}/include)
install(DIRECTORY "projects/alpaca/include/" DESTINATION ${INSTALL_DIR}/include)

ExternalProject_Add(vma_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/VulkanMemoryAllocator
  BINARY_DIR ${BUILDS_DIR}/vma
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
)

install(DIRECTORY "projects/xxhash/include/" DESTINATION ${INSTALL_DIR}/include)

ExternalProject_Add(libzip_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/libzip
  BINARY_DIR ${BUILDS_DIR}/libzip
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}

  -DENABLE_COMMONCRYPTO:BOOL=ON
  -DENABLE_GNUTLS:BOOL=ON
  -DENABLE_MBEDTLS:BOOL=ON
  -DENABLE_OPENSSL:BOOL=OFF
  -DENABLE_FDOPEN:BOOL=OFF
  -DBUILD_TOOLS:BOOL=OFF
  -DBUILD_REGRESS:BOOL=OFF
  -DBUILD_EXAMPLES:BOOL=OFF
  -DBUILD_DOC:BOOL=OFF
  -DENABLE_ZSTD:BOOL=OFF
  -DENABLE_LZMA:BOOL=OFF
  -DENABLE_BZIP2:BOOL=OFF
  -DLIBZIP_DO_INSTALL:BOOL=ON
)
ExternalProject_Add_StepDependencies(libzip_project install zlib_project)

set(BOOST_INCLUDE_LIBRARIES "program_options;date_time;interprocess;stacktrace;uuid;beast;signals2;thread;url;asio;dll;serialization")
ExternalProject_Add(boost_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/boost
  BINARY_DIR ${BUILDS_DIR}/boost
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
  -DCMAKE_INSTALL_MESSAGE=NEVER

  -DBoost_USE_STATIC_LIBS=ON
  -DBoost_USE_MULTITHREADED=ON
  -DBUILD_TESTING=OFF
  -DBOOST_INSTALL_LAYOUT=system
  CMAKE_CACHE_ARGS -DBOOST_INCLUDE_LIBRARIES:STRING=${BOOST_INCLUDE_LIBRARIES}
)

ExternalProject_Add(wepoll_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/wepoll
  BINARY_DIR ${BUILDS_DIR}/wepoll
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
)

ExternalProject_Add(pugixml_project
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/projects/pugixml
  BINARY_DIR ${BUILDS_DIR}/pugixml
  CMAKE_ARGS
  -DCMAKE_BUILD_TYPE:STRING=Release
  -DCMAKE_INSTALL_PREFIX=${INSTALL_DIR}
  -DCMAKE_INSTALL_MESSAGE=${CMAKE_INSTALL_MESSAGE}
  -DCMAKE_C_FLAGS_RELEASE=${CMAKE_C_FLAGS_RELEASE}
  -DCMAKE_CXX_FLAGS_RELEASE=${CMAKE_CXX_FLAGS_RELEASE}
  -DCMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}
)

add_library(imgui STATIC
  ${CMAKE_SOURCE_DIR}/projects/imgui/imgui_draw.cpp
  ${CMAKE_SOURCE_DIR}/projects/imgui/imgui_tables.cpp
  ${CMAKE_SOURCE_DIR}/projects/imgui/imgui_widgets.cpp
  ${CMAKE_SOURCE_DIR}/projects/imgui/imgui_demo.cpp
  ${CMAKE_SOURCE_DIR}/projects/imgui/imgui.cpp

  ${CMAKE_SOURCE_DIR}/projects/imgui/backends/imgui_impl_sdl2.cpp
  ${CMAKE_SOURCE_DIR}/projects/imgui/backends/imgui_impl_vulkan.cpp
)

set_target_properties(imgui
  PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY "${INSTALL_DIR}/bin"
  ARCHIVE_OUTPUT_DIRECTORY "${INSTALL_DIR}/lib"
  PDB_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/"
)

install(FILES
  ${CMAKE_SOURCE_DIR}/projects/imgui/imgui.h
  ${CMAKE_SOURCE_DIR}/projects/imgui/imconfig.h
  ${CMAKE_SOURCE_DIR}/projects/imgui/imstb_rectpack.h
  ${CMAKE_SOURCE_DIR}/projects/imgui/imstb_textedit.h
  ${CMAKE_SOURCE_DIR}/projects/imgui/imstb_truetype.h

  ${CMAKE_SOURCE_DIR}/projects/imgui/backends/imgui_impl_sdl2.h
  ${CMAKE_SOURCE_DIR}/projects/imgui/backends/imgui_impl_vulkan.h

  DESTINATION ${INSTALL_DIR}/include/imgui
)

target_include_directories(imgui PRIVATE
  ${CMAKE_SOURCE_DIR}/projects/imgui/
  ${CMAKE_BINARY_DIR}/builds/sdl/include/SDL2
  ${CMAKE_BINARY_DIR}/builds/sdl/include-config-release/SDL2
  ${Vulkan_INCLUDE_DIR}
)

add_dependencies(imgui sdl_project)